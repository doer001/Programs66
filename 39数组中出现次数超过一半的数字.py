''' ********************************************************************
    题目描述
    数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
    例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。
    由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。
******************************************************************** ''' 
# -*- coding:utf-8 -*-
class Solution:
    def MoreThanHalfNum_Solution(self, numbers):
        dict_num = {}
        n = len(numbers)//2
        for i in numbers:
            if i not in dict_num:
                dict_num[i] = 1
            else:
                dict_num[i] +=1
            if dict_num[i]>n:
                return i
        return 0

''' ********************************************************************
    解题思路：
    空间换时间，遍历数组，并建立字典，数字为key，数字的数量为value，
    如果遍历完成之前个数有符合的数字，则直接返回，不再进行遍历
    如果遍历完成还没有符合的，则返回0
******************************************************************** '''


