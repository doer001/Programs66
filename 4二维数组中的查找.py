# -*- coding:utf-8 -*-

''' ********************************************************************
    题目描述
    在一个二维列表中（每个一维列表的长度相同），每一行都按照从左到右递增的顺序排序，
    每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维列表和
    一个整数，判断列表中是否含有该整数。
    
    # -*- coding:utf-8 -*-
    class Solution:
        # array 二维列表
        def Find(self, target, array):
            # write code here
******************************************************************** ''' 
# -*- coding:utf-8 -*-
class Solution:
    def Find(self, target, array):
        n = len(array[0])
        if(n>0 and array[0][0]<=target<=array[-1][-1]):
            for i in array:
                for j in i:
                    if(target==j):
                        return True
        return False
''' ********************************************************************
    解题思路1：穷举法
    如果二维列表不为空，且该整数在二维列表最小数和二维列表最大数之间。
    将该整数与二维列表中的书逐一比较，如果有相同的，则列表中有该整数，否则没有。
******************************************************************** '''
# -*- coding:utf-8 -*-
class Solution:
    def Find(self, target, array):
        n = len(array[0])
        if(n>0 and array[0][0]<=target<=array[-1][-1]):
            for i in array:
                if(i[0]<=target<=i[-1]):
                    for j in i:
                        if(target==j):
                            return True
        return False
''' ********************************************************************
    解题思路2：穷举法改进之——行有序
    如果二维列表不为空，且该整数在二维列表最小数和二维列表最大数之间。
    将该整数先与二维列表中每行的首尾两数进行比较，如果该整数在首尾两数之间的范围内，
    则与该行中的数进行比较，如果有相同的，则列表中有该整数，否则没有。
******************************************************************** '''
# -*- coding:utf-8 -*-
class Solution:
    # array 二维列表
    def Find(self, target, array):
        m,n = len(array),len(array[0])
        if(n>0 and array[0][0]<=target and target<=array[-1][-1]):
            for i in range(m):
                if(array[i][0]<=target<=array[i][-1]):
                    for j in range(n):
                        if(target==array[i][j]):return True
                        elif(array[i][j-1]<target<array[i][j]):break
        return False
''' ********************************************************************
    解题思路3：穷举法改进之——行列有序
    如果二维列表不为空，且该整数在二维列表最小数和二维列表最大数之间。
    将该整数先与二维列表中每行的首尾两数进行比较，如果该整数在首尾两数之间的范围内，
    则与该行中的数进行比较，如果有相同的，则列表中有该整数，如果该整数在该行两数之
    间，则令跳出该行，继续下一行
******************************************************************** '''
